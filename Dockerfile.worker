## Builder stage
FROM python:3.12-slim AS builder

WORKDIR /app

RUN apt-get update && apt-get install -y \
    git \
    make \
    gcc \
    wget \
    && rm -rf /var/lib/apt/lists/*

ENV PATH="$PATH:/usr/local/go/bin:/root/go/bin"

RUN ARCH=$(dpkg --print-architecture) && \
    case ${ARCH} in \
        amd64) GOARCH="amd64" ;; \
        arm64) GOARCH="arm64" ;; \
        *) echo "Unsupported architecture: ${ARCH}" && exit 1 ;; \
    esac && \
    wget "https://go.dev/dl/go1.23.4.linux-${GOARCH}.tar.gz" -O /tmp/go.tar.gz && \
    tar -C /usr/local -xzf /tmp/go.tar.gz && \
    rm /tmp/go.tar.gz

RUN go install -v github.com/projectdiscovery/pdtm/cmd/pdtm@latest && \
    pdtm -i subfinder && \
    pdtm -i httpx && \
    pdtm -i dnsx && \
    pdtm -i nuclei

RUN go install github.com/Josue87/gotator@latest

RUN go install -v github.com/owasp-amass/amass/v4/...@master

RUN go install -v github.com/sensepost/gowitness@latest

RUN go install github.com/ffuf/ffuf/v2@latest

RUN cd /tmp && git clone https://github.com/blechschmidt/massdns --tag v1.1.0 && \
    cd /tmp/v1.1.0 && \
    make && \
    mv /tmp/v1.1.0/bin/massdns /usr/local/bin/massdns

RUN go install github.com/d3mondev/puredns/v2@latest

RUN go install github.com/lc/gau/v2/cmd/gau@latest

## Final stage
FROM python:3.12-slim

WORKDIR /app

RUN apt-get update && apt-get install -y \
    git \
    && rm -rf /var/lib/apt/lists/*

ENV PATH="$PATH:/root/go/bin:/root/.pdtm/go/bin:/usr/lib/go-1.15/bin"

RUN apt-get update && apt-get install -y \
    jq \
    prips \
    nmap \
    wget \
    chromium \
    && rm -rf /var/lib/apt/lists/*

RUN ARCH=$(dpkg --print-architecture) && \
    case ${ARCH} in \
        amd64) GOARCH="amd64" ;; \
        arm64) GOARCH="arm64" ;; \
        *) echo "Unsupported architecture: ${ARCH}" && exit 1 ;; \
    esac && \
    wget "https://go.dev/dl/go1.23.4.linux-${GOARCH}.tar.gz" -O /tmp/go.tar.gz && \
    tar -C /usr/local -xzf /tmp/go.tar.gz && \
    rm /tmp/go.tar.gz

ENV PATH="$PATH:/usr/local/go/bin:/usr/local/bin"

RUN ARCH=$(dpkg --print-architecture) && \
    case ${ARCH} in \
        amd64) GOARCH="amd64" ;; \
        arm64) GOARCH="arm64" ;; \
        *) echo "Unsupported architecture: ${ARCH}" && exit 1 ;; \
    esac && \
    wget "https://github.com/tomnomnom/unfurl/releases/download/v0.4.3/unfurl-linux-${GOARCH}-0.4.3.tgz" -O /tmp/unfurl.tar.gz && \
    tar -C /usr/local/bin -xzf /tmp/unfurl.tar.gz && \
    rm /tmp/unfurl.tar.gz


RUN git clone https://github.com/UnaPibaGeek/ctfr.git /opt/ctfr && \
    cd /opt/ctfr && \
    pip install -r requirements.txt

# Copy binaries from builder stage
COPY --from=builder /usr/local/go/bin/* /usr/local/bin/

COPY --from=builder /root/go/bin/* /usr/local/bin/

COPY --from=builder /root/.pdtm/go/bin/* /usr/local/bin/

COPY --from=builder /usr/local/bin/massdns /usr/local/bin/massdns

# Copy recon worker files
COPY ./docker/worker/*.txt /app/Worker/files/

COPY ./docker/worker/.gau.toml /root/

COPY ./src/h3xrecon/__about__.py /app/

COPY ./dist/h3xrecon-*.whl /app/

RUN python3 -m venv /app/venv && \
    /app/venv/bin/pip install --upgrade pip && \
    /app/venv/bin/pip install /app/h3xrecon-*-py3-none-any.whl

ENV PYTHONUNBUFFERED=1

ENV PYTHONFAULTHANDLER=1

ENTRYPOINT ["/app/venv/bin/h3xrecon-recon"]
