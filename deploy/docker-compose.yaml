services:
  # tailscale:
  #   image: tailscale/tailscale:latest
  #   environment:
  #     - TS_AUTH_KEY_FILE=/run/secrets/tailscale_auth_key
  #     - TS_AUTH_KEY=
  #     - TS_HOSTNAME=processor
  #     - TS_STATE_DIR=/var/lib/tailscale
  #     - TS_EXTRA_ARGS=--reset
  #     - TS_USERSPACE=false
  #     - TS_SERVE_CONFIG=./serve.yaml
  #     - TS_SERVE_PORT_RANGES=4222,5432,6379
  #   volumes:
  #     - tailscale_state:/var/lib/tailscale
  #     - /dev/net/tun:/dev/net/tun
  #     - ./tailscale/serve.yaml:/var/lib/tailscale/serve.yaml
  #     - ./tailscale/entrypoint.sh:/entrypoint.sh
  #   cap_add:
  #     - net_admin
  #     - sys_module
  #   secrets:
  #     - tailscale_auth_key
  #   restart: unless-stopped
  #   entrypoint: ["/bin/sh", "/entrypoint.sh"]
  #   # logging:
  #   #   driver: "none"
  #   privileged: true
  #   healthcheck:
  #     test: ["CMD", "tailscale", "status"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --protected-mode no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - target: 6379
        published: 6379
        mode: host
    deploy:
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  pgsql:
    environment:
      - POSTGRES_PASSWORD=
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgresql_db_password
      - POSTGRES_USER=h3xrecon
      - POSTGRES_DB=h3xrecon
    image: ghcr.io/h3xitsec/h3xrecon_pgsql:latest
    secrets:
      - postgresql_db_password
    volumes:
      - pgsql_data:/var/lib/postgresql/data
    ports:
      - target: 5432
        published: 5432
        mode: host
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U h3xrecon -d h3xrecon"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor

  nats:
    image: ghcr.io/h3xitsec/h3xrecon_nats:latest
    volumes:
      - nats_data:/data
    ports:
      - target: 4222
        published: 4222
        mode: host
    healthcheck:
      test: nats stream ls --server=nats://localhost:4222 | grep -q "FUNCTION_EXECUTE" && nats stream ls --server=nats://localhost:4222 | grep -q "FUNCTION_OUTPUT" && nats stream ls --server=nats://localhost:4222 | grep -q "RECON_DATA"
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 5s
    deploy:
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  logger:
    env_file: .env
    image: ghcr.io/h3xitsec/h3xrecon_logger:latest
    secrets:
      - postgresql_db_password
    depends_on:
    - nats:service_healthy
    - pgsql:service_healthy
    environment:
      - LOGURU_LEVEL=DEBUG
    deploy:
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  job_processor:
    env_file: .env
    image: ghcr.io/h3xitsec/h3xrecon_jobprocessor:latest
    secrets:
      - postgresql_db_password
    depends_on:
    - tailscale:service_healthy
    - nats:service_healthy
    - redis:service_healthy
    environment:
      - LOGURU_LEVEL=DEBUG
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  data_processor:
    env_file: .env
    image: ghcr.io/h3xitsec/h3xrecon_dataprocessor:latest
    secrets:
      - postgresql_db_password
    depends_on:
      - tailscale:service_healthy
      - nats:service_healthy
      - redis:service_healthy
    environment:
      - LOGURU_LEVEL=DEBUG
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  worker:
    env_file: .env
    image: ghcr.io/h3xitsec/h3xrecon_worker:latest
    depends_on:
    - tailscale:service_healthy
    environment:
      - LOGURU_LEVEL=DEBUG
    secrets:
      - postgresql_db_password
    deploy:
      mode: replicated
      replicas: 5
      placement:
        constraints:
          - node.labels.h3xrecon_role == worker

volumes:
  pgsql_data: {}
  redis_data: {}
  nats_data: {}
  tailscale_state: {}

secrets:
  tailscale_auth_key:
    file: ./secrets/tailscale_auth_key_processor.txt
  postgresql_db_password:
    file: ./secrets/postgresql_db_password.txt