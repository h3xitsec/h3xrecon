- name: Configure Docker Swarm
  block:
    - name: Get Tailscale IP
      ansible.builtin.command: tailscale ip -4
      register: tailscale_ip
      changed_when: false

    - ansible.builtin.debug:
        var: tailscale_ip

    - name: Initialize Swarm on first host
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ tailscale_ip.stdout }}"
      when: inventory_hostname == groups['processor'][0]
      register: swarm_init

    - name: Get Swarm join token for workers
      community.docker.docker_swarm_info:
        nodes: yes
      register: swarm_info
      delegate_to: "{{ groups['processor'][0] }}"
      when: inventory_hostname != groups['processor'][0]

    - name: Join Swarm as worker
      community.docker.docker_swarm:
        state: join
        advertise_addr: "{{ tailscale_ip.stdout }}"
        join_token: "{{ swarm_info.swarm_facts.JoinTokens.Worker }}"
        remote_addrs: [ "{{ hostvars[groups['processor'][0]]['tailscale_ip']['stdout'] }}" ]
      when: inventory_hostname != groups['processor'][0]
  
- name: Tag Swarm Nodes
  block:
    - name: Tag processor node
      ansible.builtin.shell: docker node update --label-add h3xrecon_role=processor {{ groups['processor'][0] }}
      when: 
        - inventory_hostname == groups['processor'][0]
      delegate_to: "{{ groups['processor'][0] }}"

    - name: Tag worker nodes
      ansible.builtin.shell: docker node update --label-add h3xrecon_role=worker {{ item }}
      loop: "{{ groups['workers'] }}"
      run_once: true
      when: 
        - inventory_hostname == groups['processor'][0]
      delegate_to: "{{ groups['processor'][0] }}"
