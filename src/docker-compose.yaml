services:
  redis:
    image: redis:6.2-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --protected-mode no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - target: 6379
        published: 6379
    deploy:
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  pgsql:
    environment:
      - POSTGRES_PASSWORD=
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgresql_db_password
      - POSTGRES_USER=h3xrecon
      - POSTGRES_DB=h3xrecon
    image: ghcr.io/h3xitsec/h3xrecon_pgsql:latest
    secrets:
      - postgresql_db_password
    volumes:
      - pgsql_data:/var/lib/postgresql/data
    ports:
      - target: 5432
        published: 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U h3xrecon -d h3xrecon"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor

  nats:
    image: ghcr.io/h3xitsec/h3xrecon_nats:latest
    volumes:
      - nats_data:/data
    ports:
      - target: 4222
        published: 4222
    healthcheck:
      test: nats stream ls --server=nats://localhost:4222 | grep -q "FUNCTION_EXECUTE" && nats stream ls --server=nats://localhost:4222 | grep -q "FUNCTION_OUTPUT" && nats stream ls --server=nats://localhost:4222 | grep -q "RECON_DATA"
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 5s
    deploy:
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  logger:
    env_file: .env
    image: ghcr.io/h3xitsec/h3xrecon_logger:latest
    secrets:
      - postgresql_db_password
    depends_on:
    - nats:service_healthy
    - pgsql:service_healthy
    environment:
      - LOGURU_LEVEL=INFO
    deploy:
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  job_processor:
    env_file: .env
    image: ghcr.io/h3xitsec/h3xrecon_jobprocessor:latest
    secrets:
      - postgresql_db_password
    depends_on:
    - tailscale:service_healthy
    - nats:service_healthy
    - redis:service_healthy
    environment:
      - LOGURU_LEVEL=INFO
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  data_processor:
    env_file: .env
    image: ghcr.io/h3xitsec/h3xrecon_dataprocessor:latest
    secrets:
      - postgresql_db_password
    depends_on:
      - tailscale:service_healthy
      - nats:service_healthy
      - redis:service_healthy
    environment:
      - LOGURU_LEVEL=INFO
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.h3xrecon_role == processor
  
  worker:
    env_file: .env
    image: ghcr.io/h3xitsec/h3xrecon_worker:latest
    depends_on:
    - tailscale:service_healthy
    environment:
      - LOGURU_LEVEL=INFO
    secrets:
      - postgresql_db_password
    deploy:
      mode: replicated
      replicas: 5
      placement:
        constraints:
          - node.labels.h3xrecon_role == worker

volumes:
  pgsql_data: {}
  redis_data: {}
  nats_data: {}
  tailscale_state: {}

secrets:
  postgresql_db_password:
    environment: H3XRECON_DB_PASS